#!/usr/bin/env ruby

require 'rubygems'
require 'bundler'
Bundler.setup :default

require 'gli'
require 'trema'

module RouterControl
  extend GLI::App

  desc 'Print routing table'
  arg_name '@routing_table'
  command :printRT do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      @routing_table = Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.print_routing_talbe()
      print "\"destination/netmask\" \"next hop\"\n"
      @routing_table.each do |each|
        mask = @routing_table.find_index each
        each.each do |key, value|
          print sprintf("%-21s %s\n", key+"/"+mask.to_s, value)
        end
      end
    end
  end

	desc 'Return next hop IP addess'
	arg_name 'destination_ip'
	command :nextHop do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
			destination_ip = args[0].to_i
			nextHop = Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.find_next_hop(destination_ip)
			if nextHop			
				print sprintf("Next Hop is %s\n", nextHop) 
			else
				print sprintf("No Entry in Routing Table")
			end			
		end
	end

  desc 'Add routing table entry'
  arg_name 'destination_ip netmask_length next_hop'
  command :addRT do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      destination_ip = args[0]
      netmask_length = args[1].to_i
      next_hop = args[2]
      Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.add_entry_for_routing_table(destination_ip, netmask_length, next_hop)
    end
  end

  desc 'Delete routing table entry'
  arg_name 'destination_ip netmask_length'
  command :delRT do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      destination_ip = args[0]
      netmask_length = args[1].to_i
      next_hop = args[2]
      Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.delete_entry_from_routing_table(destination_ip, netmask_length)
    end
  end

  desc 'Print interface'
  arg_name 'interfaces'
  command :printInterface do |c|
    c.desc 'Location to find socket files'
    c.flag [:S, :socket_dir], default_value: Trema::DEFAULT_SOCKET_DIR

    c.action do |_global_options, options, args|
      interfaces = Trema.trema_process('SimpleRouter', options[:socket_dir]).controller.print_interface()
      print sprintf("%s %-17s %s", "\"port number\"", "\"mac address\"", "\"ip address/netmask\"\n")
      interfaces.each do |each|
        print sprintf("%-13s %-17s %s\n", each[:port_number].to_s, each[:mac_address], each[:ip_address]+"/"+each[:netmask_length].to_s)
      end
    end
  end

	exit run(ARGV)
end
